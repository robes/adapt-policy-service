package edu.isi.policy

/*
  These rules enforce max parallel streams between two hosts, 
  but reserves an equal amount of streams for each cluster.
*/
import edu.isi.policy.entity.ResourceExpressionPair;

global Map maxParallelStreams;
global Integer number_of_clusters;

rule "Enforce cluster max parallel streams on third-party transfer"
when
  $t:Transfer(source.getScheme() != "file", destination.getScheme() != "file", $sourceHost:source.getHost(), $destinationHost:destination.getHost(), $current_parallel:properties["parallel"] != null, properties["parallel"] > 1, properties["STATUS"] == null) 
  $max_streams: Number(this < $current_parallel) from Math.floor(maxParallelStreams.get(new ResourceExpressionPair($sourceHost.toString(), $destinationHost.toString()))/number_of_clusters)
then
  Integer $new_streams = $max_streams.intValue();
  modify($t) {
    setProperty("parallel", $new_streams.toString())
  }
  if(logger.isDebugEnabled()) {
    logger.debug("Set parallel=" + $new_streams + " for transfer " + $t + " because " + $current_parallel + " violated max cluster threshold of " + $new_streams);
  }
end

rule "Enforce cluster max parallel streams on two-party download"
when
  $t:Transfer(source.getScheme() != "file", destination.getScheme() == "file", $sourceHost:source.getHost(), $destinationHost:properties["local_file_host"] != null, $current_parallel:properties["parallel"] != null, properties["parallel"] > 1, properties["STATUS"] == null) 
  $max_streams: Number(this < $current_parallel) from Math.floor(maxParallelStreams.get(new ResourceExpressionPair($sourceHost.toString(), $destinationHost.toString()))/number_of_clusters)
then
  Integer $new_streams = $max_streams.intValue();
  modify($t) {
    setProperty("parallel", $new_streams.toString())
  }
  if(logger.isDebugEnabled()) {
    logger.debug("Set parallel=" + $new_streams + " for transfer " + $t + " because " + $current_parallel + " violated max cluster threshold of " + $new_streams);
  }
end

rule "Enforce cluster max parallel streams on two-party upload"
when
  $t:Transfer(source.getScheme() == "file", destination.getScheme() != "file", $sourceHost:properties["local_file_host"] != null, $destinationHost:destination.getHost(), $current_parallel:properties["parallel"] != null, properties["parallel"] > 1, properties["STATUS"] == null) 
  $max_streams: Number(this < $current_parallel) from Math.floor(maxParallelStreams.get(new ResourceExpressionPair($sourceHost.toString(), $destinationHost.toString()))/number_of_clusters)
then
  Integer $new_streams = $max_streams.intValue();
  modify($t) {
    setProperty("parallel", $new_streams.toString())
  }
  if(logger.isDebugEnabled()) {
    logger.debug("Set parallel=" + $new_streams + " for transfer " + $t + " because " + $current_parallel + " violated max cluster threshold of " + $new_streams);
  }
end